# import * from 'generated/prisma.graphql'
# import  * from './input.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  signup(email: String!, password: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  updateAdmin(user: UserInput, admin: AdminInput): User!
  updatePassword(password: String!): User!
  addDosen(user: UserBaruInput, dosen: DosenBaruInput): User!
  updateDosen(data: DosenUpdateInput!, where: DosenWhereUniqueInput!): Dosen
  updatePasswordDosen(
    data: DosenUpdateInput!
    where: DosenWhereUniqueInput!
  ): Dosen
  deleteDosen(id: ID!): Dosen!
  addMahasiswa(user: UserBaruInput, mahasiswa: MahasiswaBaruInput): User!
  updateMahasiswa(
    data: MahasiswaUpdateInput!
    where: MahasiswaWhereUniqueInput!
  ): Mahasiswa
  updatePasswordMahasiswa(
    data: MahasiswaUpdateInput!
    where: MahasiswaWhereUniqueInput!
  ): Mahasiswa
  deleteMahasiswa(id: ID!): Mahasiswa!

  createMataKuliah(data: MataKuliahCreateInput!): MataKuliah!
  updateMataKuliah(
    data: MataKuliahUpdateInput!
    where: MataKuliahWhereUniqueInput!
  ): MataKuliah
  deleteMataKuliah(id: ID!): MataKuliah!
  addKelas(kelas: KelasBaruInput!, idDosen: ID!, idMataKuliah: ID!): Kelas!
  updateKelas(data: KelasUpdateInput!, where: KelasWhereUniqueInput!): Kelas
  deleteKelas(id: ID!): Kelas!

  createUser(data: UserCreateInput!): User!
  createKelas(data: KelasCreateInput!): Kelas!

  createBankSoal(data: BankSoalCreateInput!): BankSoal!
  deleteBankSoal(id: ID!): BankSoal
  updateBankSoal(
    data: BankSoalUpdateInput!
    where: BankSoalWhereUniqueInput!
  ): BankSoal

  createSoal(data: SoalCreateInput!): Soal!
  updateSoal(data: SoalUpdateInput!, where: SoalWhereUniqueInput!): Soal
  deleteSoal(where: SoalWhereUniqueInput!): Soal

  createUjian(data: UjianCreateInput!): Ujian!
  deleteUjian(where: UjianWhereUniqueInput!): Ujian
  updateUjian(data: UjianUpdateInput!, where: UjianWhereUniqueInput!): Ujian

  loginUjian(
    email: String!
    password: String!
    pinUjian: String!
  ): IdentitasLoginUjian!

  updateSoalMahasiswa(
    data: SoalMahasiswaUpdateInput!
    where: SoalMahasiswaWhereUniqueInput!
  ): SoalMahasiswa!

  createSkor(soalMahasiswa: ID!): Skor

  loginPengawas(
    pinPengawas: String!
    pinUjian: String!
  ): IdentitasLoginPengawas!

  updatePinUjian(id: ID!, jwt: String!): Ujian!

  updateTidakHadir(idUjian: ID!, idMahasiswa: ID!): TidakHadir
}

type Query {
  pertanyaan: String!
  me: User
  admin: User!
  currentDosen: User!
  currentMahasiswa: User!
  dosens(
    where: DosenWhereInput
    orderBy: DosenOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Dosen!]!
  dosen(id: ID!): Dosen!
  mahasiswas(
    where: MahasiswaWhereInput
    orderBy: MahasiswaOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Mahasiswa!]!
  mahasiswa(id: ID!): Mahasiswa!

  mataKuliahs(
    where: MataKuliahWhereInput
    orderBy: MataKuliahOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [MataKuliah!]!
  mataKuliahsDosen(
    where: MataKuliahWhereInput
    orderBy: MataKuliahOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [MataKuliah!]!

  mataKuliah(id: ID!): MataKuliah!

  kelases(
    where: KelasWhereInput
    orderBy: KelasOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Kelas]!

  kelasesDosen(
    where: KelasWhereInput
    orderBy: MataKuliahOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Kelas!]!
  kelas(id: ID!): Kelas!

  kelasesMahasiswa(
    where: KelasWhereInput
    orderBy: MataKuliahOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Kelas!]!

  angkatans(
    where: AngkatanWhereInput
    orderBy: AngkatanOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Angkatan]!

  bankSoal(where: BankSoalWhereUniqueInput!): BankSoal
  bankSoals(
    where: BankSoalWhereInput
    orderBy: BankSoalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BankSoal!]

  soal(where: SoalWhereUniqueInput!): Soal

  ujian(where: UjianWhereUniqueInput!): Ujian
  ujians(
    where: UjianWhereInput
    orderBy: UjianOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Ujian]!

  ujiansMahasiswa(
    where: UjianWhereInput
    orderBy: UjianOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Ujian]!

  statusUjian: User

  infoUjian(id: String!, jwt: String!): Ujian
  infoPesertaUjian(id: String!, jwt: String!): User
  soalUjianMahasiswa(id: String!, jwt: String!): SoalMahasiswa!

  skor(where: SkorWhereUniqueInput!): Skor!
  tidakHadirs(
    where: TidakHadirWhereInput
    orderBy: TidakHadirOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [TidakHadir]!
}

type User {
  id: ID!
  email: String!
  permissions: [Permission!]!
  passwordKasih: String!
  admin: Admin
  mahasiswa: Mahasiswa
  dosen: Dosen
}
