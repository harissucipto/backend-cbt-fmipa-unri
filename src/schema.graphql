# import * from 'generated/prisma.graphql'
# import  * from './input.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  signup(email: String!, password: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  updateAdmin(user: UserInput, admin: AdminInput): User!
  addDosen(user: UserBaruInput, dosen: DosenBaruInput): User!
  updateDosen(user: UserInput, dosen: DosenBaruInput, id: ID!): User!
  deleteDosen(id: ID!): Dosen!
  addMahasiswa(user: UserBaruInput, mahasiswa: MahasiswaBaruInput): User!
  updateMahasiswa(
    user: UserInput
    mahasiswa: MahasiswaBaruInput
    id: ID!
  ): User!
  deleteMahasiswa(id: ID!): Mahasiswa!
  addPengawas(user: UserBaruInput, pengawas: PengawasBaruInput): User!
  updatePengawas(user: UserInput, pengawas: PengawasBaruInput, id: ID!): User!
  deletePengawas(id: ID!): Pengawas!
}

type Query {
  pertanyaan: String!
  me: User
  dosens(
    where: DosenWhereInput
    orderBy: DosenOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Dosen!]!
  dosen(id: ID!): Dosen!
  mahasiswas(
    where: DosenWhereInput
    orderBy: DosenOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Mahasiswa!]!
  mahasiswa(id: ID!): Mahasiswa!
  pengawass(
    where: DosenWhereInput
    orderBy: DosenOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Pengawas!]!
  pengawas(id: ID!): Pengawas!
}

type User {
  id: ID!
  email: String!
  permissions: [Permission!]!
  passwordKasih: String!
  admin: Admin
  mahasiswa: Mahasiswa
  dosen: Dosen
  pengawas: Pengawas
}
